"function" != typeof Object.create && (Object.create = function(t) {
        function e() {}
        return e.prototype = t, new e
    }),
    function(t, e, i, a) {
        t.fn.socialfeed = function(e) {
            var i = t.extend({
                    plugin_folder: "",
                    template: "template.html",
                    show_media: !1,
                    media_min_width: 300,
                    length: 500,
                    date_format: "ll",
                    date_locale: "en"
                }, e),
                n = t(this),
                o = ["facebook", "twitter"],
                r = 0,
                c = 0;
            o.forEach(function(t) {
                i[t] && (i[t].accounts ? r += i[t].limit * i[t].accounts.length : i[t].urls ? r += i[t].limit * i[t].urls.length : r += i[t].limit)
            });
            var s = {
                request: function(e, i) {
                    t.ajax({
                        url: e,
                        dataType: "jsonp",
                        success: i
                    })
                },
                get_request: function(e, i) {
                    t.get(e, i, "json")
                },
                wrapLinks: function(t, e) {
                    return t.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi, s.wrapLinkTemplate)
                },
                wrapLinkTemplate: function(t) {
                    return '<a target="_blank" href="' + t + '">' + t + "</a>"
                },
                shorten: function(e) {
                    return (e = t.trim(e)).length > i.length ? jQuery.trim(e).substring(0, i.length).split(" ").slice(0, -1).join(" ") + "..." : e
                },
                stripHTML: function(t) {
                    return null == t ? "" : t.replace(/(<([^>]+)>)|nbsp;|\s{2,}|/gi, "")
                }
            };

            function u(t, e) {
                this.content = e, this.content.social_network = t, this.content.attachment = this.content.attachment === a ? "" : this.content.attachment, this.content.time_ago = e.dt_create, this.content.dt_create = this.content.dt_create.valueOf(), this.content.text = s.wrapLinks(s.shorten(e.message + " " + e.description), e.social_network), this.content.moderation_passed = !i.moderation || i.moderation(this.content), l[t].posts.push(this)
            }
            u.prototype = {
                render: function() {
                    var e = l.template(this.content),
                        a = this.content;
                    if (0 !== t(n).children("[social-feed-id=" + a.id + "]").length) return !1;
                    if (0 === t(n).children().length) t(n).append(e);
                    else {
                        var o = -1;
                        if (this.content.social_network, t.each(t(n).children(), function() {}), t(n).append(e), o >= 0) {
                            o++;
                            var s = t(n).children("div:nth-child(" + o + ")"),
                                u = t(n).children("div:last-child");
                            t(u).insertBefore(s)
                        }
                    }
                    if (i.media_min_width) {
                        var d = "[social-feed-id=" + a.id + "] img.attachment",
                            m = t(d),
                            h = new Image,
                            f = m.attr("src");
                        t(h).on("load", function() {
                            h.width < i.media_min_width && m.hide(), delete h
                        }).on("error", function() {
                            m.hide()
                        }).attr({
                            src: f
                        })
                    }++c == r && i.callback && i.callback()
                }
            };
            var l = {
                template: !1,
                init: function() {
                    l.getTemplate(function() {
                        o.forEach(function(t) {
                            i[t] && (i[t].accounts ? i[t].accounts.forEach(function(e) {
                                l[t].getData(e)
                            }) : i[t].urls ? i[t].urls.forEach(function(e) {
                                l[t].getData(e)
                            }) : l[t].getData())
                        })
                    })
                },
                getTimeAgo: function(t) {
                    var e = 36e5,
                        i = 24 * e,
                        a = 30 * i,
                        n = 365 * i,
                        o = Date.now() - new Date(t).getTime();
                    return o < 6e4 ? Math.round(o / 1e3) + " seconds ago" : o < e ? Math.round(o / 6e4) + " minutes ago" : o < i ? Math.round(o / e) + " hour ago" : o < a ? Math.round(o / i) + " days ago" : o < n ? Math.round(o / a) + " months ago" : Math.round(o / n) + " years ago"
                },
                getTemplate: function(e) {
                    return l.template ? e() : i.template_html ? (l.template = doT.template(i.template_html), e()) : void t.get(i.template, function(t) {
                        return l.template = doT.template(t), e()
                    })
                },
                twitter: {
                    posts: [],
                    loaded: !1,
                    api: "https://api.tweecool.com/",
                    getData: function(t) {
                        var e = new Codebird;
                        switch (e.setToken(i.twitter.token, i.twitter.secret) || e.setConsumerKey(i.twitter.consumer_key, i.twitter.consumer_secret), i.twitter.proxy !== a && e.setProxy(i.twitter.proxy), t[0]) {
                            case "@":
                                var n = t.substr(1);
                                e.__call("statuses_userTimeline", {
                                    id: n,
                                    count: i.twitter.limit,
                                    tweet_mode: void 0 === i.twitter.tweet_mode ? "compatibility" : i.twitter.tweet_mode
                                }, l.twitter.utility.getPosts, !0);
                                break;
                            case "#":
                                var o = t.substr(1);
                                e.__call("search_tweets", {
                                    q: o,
                                    count: i.twitter.limit,
                                    tweet_mode: void 0 === i.twitter.tweet_mode ? "compatibility" : i.twitter.tweet_mode
                                }, function(t) {
                                    l.twitter.utility.getPosts(t.statuses)
                                }, !0)
                        }
                    },
                    utility: {
                        getPosts: function(e) {
                            e && t.each(e, function() {
                                new u("twitter", l.twitter.utility.unifyPostData(this)).render()
                            })
                        },
                        unifyPostData: function(t) {
                            var e = {};
                            if (t.id && (e.id = t.id_str, e.dt_create = l.getTimeAgo(t.created_at), e.author_link = "https://twitter.com/" + t.user.screen_name, e.author_picture = t.user.profile_image_url_https, e.post_url = e.author_link + "/status/" + t.id_str, e.author_name = t.user.name, e.message = void 0 === t.text ? t.full_text.substr(t.display_text_range[0], t.display_text_range[1]) : t.text, e.description = "", e.link = "https://twitter.com/" + t.user.screen_name + "/status/" + t.id_str, !0 === i.show_media && t.entities.media && t.entities.media.length > 0)) {
                                var a = t.entities.media[0].media_url_https;
                                a && (e.attachment = '<img class="attachment" src="' + a + '" />')
                            }
                            return e
                        }
                    }
                },
                facebook: {
                    posts: [],
                    graph: "https://graph.facebook.com/",
                    loaded: !1,
                    getData: function(t) {
                        var e = function(t) {
                                s.request(t, l.facebook.utility.getPosts)
                            },
                            a = "?fields=id,from,message,created_time,story";
                        a += !0 === i.show_media ? ",full_picture" : "";
                        var n, o = "&limit=" + i.facebook.limit,
                            r = "&access_token=" + i.facebook.access_token + "&callback=?";
                        switch (t[0]) {
                            case "@":
                                var c = t.substr(1);
                                l.facebook.utility.getUserId(c, function(t) {
                                    "" !== t.id && (n = l.facebook.graph + "v2.12/" + t.id + "/posts" + a + o + r, e(n))
                                });
                                break;
                            case "!":
                                var u = t.substr(1);
                                n = l.facebook.graph + "v2.12/" + u + "/feed" + a + o + r, e(n);
                                break;
                            default:
                                e(n)
                        }
                    },
                    utility: {
                        getUserId: function(e, a) {
                            var n = "https://graph.facebook.com/" + e + "?&access_token=" + i.facebook.access_token + "&callback=?";
                            t.get(n, a, "json")
                        },
                        prepareAttachment: function(t) {
                            var e = t.full_picture;
                            return -1 !== e.indexOf("_b.") || (-1 !== e.indexOf("safe_image.php") ? e = l.facebook.utility.getExternalImageURL(e, "url") : -1 !== e.indexOf("app_full_proxy.php") ? e = l.facebook.utility.getExternalImageURL(e, "src") : t.object_id && (e = l.facebook.graph + t.object_id + "/picture/?type=normal")), '<img class="attachment" src="' + e + '" />'
                        },
                        getExternalImageURL: function(t, e) {
                            return -1 === (t = decodeURIComponent(t).split(e + "=")[1]).indexOf("fbcdn-sphotos") ? t.split("&")[0] : t
                        },
                        getPosts: function(t) {
                            t.data && t.data.forEach(function(t) {
                                null !== t.from && new u("facebook", l.facebook.utility.unifyPostData(t)).render()
                            })
                        },
                        unifyPostData: function(t) {
                            var e = {},
                                a = t.message ? t.message : t.story;
                            if (e.id = t.id, e.dt_create = l.getTimeAgo(t.created_time), e.author_link = "http://facebook.com/" + t.from.id, e.author_picture = l.facebook.graph + t.from.id + "/picture", e.author_name = t.from.name, e.name = t.name || "", e.message = a || "", e.description = t.description ? t.description : "", e.link = t.link ? t.link : "http://facebook.com/" + t.from.id, !0 === i.show_media && t.full_picture) {
                                var n = l.facebook.utility.prepareAttachment(t);
                                n && (e.attachment = n)
                            }
                            return e
                        }
                    }
                }
            };
            return this.each(function() {
                l.init(), i.update_period && setInterval(function() {
                    return l.init()
                }, i.update_period)
            })
        }
    }(jQuery);